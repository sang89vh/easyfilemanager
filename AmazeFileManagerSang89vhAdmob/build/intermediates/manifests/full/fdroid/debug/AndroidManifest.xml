<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (C) 2014 Arpit Khurana <arpitkh96@gmail.com>, Vishal Nehra <vishalmeham2@gmail.com>

    This file is part of Easy File Manager.

    Easy File Manager is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.mybox.filemanager"
    android:versionCode="56"
    android:versionName="3.2.2" >

    <uses-sdk
        android:minSdkVersion="14"
        android:targetSdkVersion="25" />

    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="com.android.launcher.permission.INSTALL_SHORTCUT" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    <uses-permission android:name="android.permission.USE_CREDENTIALS" />
    <uses-permission android:name="com.android.vending.BILLING" />

    <uses-feature
        android:name="android.hardware.touchscreen"
        android:required="false" />

    <!-- Permissions required for GCM -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <permission
        android:name="com.mybox.filemanager.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.mybox.filemanager.permission.C2D_MESSAGE" />

    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />

    <application
        android:name="com.mybox.filemanager.utils.AppConfig"
        android:icon="@mipmap/ic_launcher"
        android:label="File Manager Explorer Pro" >
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <activity
            android:name="com.mybox.filemanager.activities.MainActivity"
            android:label="Easy File Manager"
            android:launchMode="singleInstance"
            android:theme="@style/appCompatLight" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.GET_CONTENT" />

                <data android:mimeType="*/*" />

                <category android:name="android.intent.category.OPENABLE" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.RINGTONE_PICKER" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <data android:mimeType="application/zip" />
                <data android:mimeType="application/rar" />
                <data android:mimeType="application/x-rar-compressed" /> <!-- <category android:name="android.intent.category.OPENABLE" /> -->
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.mybox.filemanager.activities.Preferences"
            android:label="@string/setting"
            android:theme="@style/appCompatLight"
            android:uiOptions="splitActionBarWhenNarrow" >
            <intent-filter>
                <action android:name="android.intent.action.APPLICATION_PREFERENCES" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.mybox.filemanager.activities.TextReader"
            android:label="@string/textreader"
            android:theme="@style/appCompatLight" >
            <intent-filter android:label="Easy Text Editor" >
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="text/*" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.mybox.filemanager.activities.DbViewer"
            android:label="@string/databasereader"
            android:screenOrientation="locked"
            android:theme="@style/appCompatLight" >
            <intent-filter android:label="Easy Database Reader" >
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="db/*" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.mybox.filemanager.activities.AboutActivity"
            android:label="About"
            android:theme="@style/aboutLight" />

        <service
            android:name="com.mybox.filemanager.services.ExtractService"
            android:label="Extracting" >
        </service>
        <service
            android:name="com.mybox.filemanager.services.ZipTask"
            android:label="Compressing" >
        </service>
        <service
            android:name="com.mybox.filemanager.services.CopyService"
            android:label="Copying" >
        </service>
        <service
            android:name="com.mybox.filemanager.services.ftpservice.FTPService"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name="com.mybox.filemanager.services.ftpservice.FTPTileService"
            android:icon="@drawable/ic_ftp_dark"
            android:label="@string/ftp"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE" >
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
        </service>

        <receiver
            android:name="com.mybox.filemanager.services.ftpservice.FTPReceiver"
            android:exported="true" >
            <intent-filter>
                <action android:name="com.mybox.filemanager.services.ftpservice.FTPReceiver.ACTION_START_FTPSERVER" />
                <action android:name="com.mybox.filemanager.services.ftpservice.FTPReceiver.ACTION_STOP_FTPSERVER" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.mybox.filemanager.ui.notifications.FTPNotification"
            android:exported="true" >
            <intent-filter>
                <action android:name="com.mybox.filemanager.services.ftpservice.FTPReceiver.FTPSERVER_STARTED" />
                <action android:name="com.mybox.filemanager.services.ftpservice.FTPReceiver.FTPSERVER_STOPPED" />
            </intent-filter>
        </receiver>

        <!-- HTTP -->
        <service
            android:name="com.mybox.filemanager.services.httpservice.HTTPService"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name="com.mybox.filemanager.services.httpservice.HTTPTileService"
            android:icon="@drawable/ic_http_dark"
            android:label="@string/http"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE" >
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
        </service>

        <receiver
            android:name="com.mybox.filemanager.services.httpservice.HTTPReceiver"
            android:exported="true" >
            <intent-filter>
                <action android:name="com.mybox.filemanager.services.httpservice.HTTPReceiver.ACTION_START_HTTPSERVER" />
                <action android:name="com.mybox.filemanager.services.httpservice.HTTPReceiver.ACTION_STOP_HTTPSERVER" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.mybox.filemanager.ui.notifications.HTTPNotification"
            android:exported="true" >
            <intent-filter>
                <action android:name="com.mybox.filemanager.services.httpservice.HTTPReceiver.HTTPSERVER_STARTED" />
                <action android:name="com.mybox.filemanager.services.httpservice.HTTPReceiver.HTTPSERVER_STOPPED" />
            </intent-filter>
        </receiver>

        <activity
            android:name="com.google.android.gms.appinvite.PreviewActivity"
            android:exported="true"
            android:theme="@style/Theme.AppInvite.Preview" >
            <intent-filter>
                <action android:name="com.google.android.gms.appinvite.ACTION_PREVIEW" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.google.android.gms.auth.api.signin.internal.SignInHubActivity"
            android:excludeFromRecents="true"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <!--
Service handling Google Sign-In user revocation. For apps that do not integrate with
            Google Sign-In, this service will never be started.
        -->
        <service
            android:name="com.google.android.gms.auth.api.signin.RevocationBoundService"
            android:exported="true"
            android:permission="com.google.android.gms.auth.api.signin.permission.REVOCATION_NOTIFICATION" />

        <receiver android:name="com.google.android.gms.cast.framework.media.MediaIntentReceiver" />

        <service android:name="com.google.android.gms.cast.framework.media.MediaNotificationService" />
        <service android:name="com.google.android.gms.cast.framework.ReconnectionService" />
        <!--
 FirebaseMessagingService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.messaging.FirebaseMessagingService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service
            android:name="com.google.android.gms.tagmanager.TagManagerService"
            android:enabled="true"
            android:exported="false" />

        <activity
            android:name="com.google.android.gms.tagmanager.TagManagerPreviewActivity"
            android:noHistory="true" > <!-- optional, removes the previewActivity from the activity stack. -->
            <intent-filter>
                <data android:scheme="tagmanager.c.com.mybox.filemanager" />

                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
            </intent-filter>
        </activity>

        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementReceiver"
            android:enabled="true"
            android:exported="false" >
        </receiver>
        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementInstallReferrerReceiver"
            android:enabled="true"
            android:permission="android.permission.INSTALL_PACKAGES" >
            <intent-filter>
                <action android:name="com.android.vending.INSTALL_REFERRER" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.google.android.gms.measurement.AppMeasurementService"
            android:enabled="true"
            android:exported="false" />

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
                <action android:name="com.google.android.c2dm.intent.REGISTRATION" />

                <category android:name="com.mybox.filemanager" />
            </intent-filter>
        </receiver>
        <!--
 Internal (not exported) receiver used by the app to start its own exported services
             without risk of being spoofed.
        -->
        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdInternalReceiver"
            android:exported="false" />
        <!--
 FirebaseInstanceIdService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.iid.FirebaseInstanceIdService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="com.mybox.filemanager.firebaseinitprovider"
            android:exported="false"
            android:initOrder="100" /> <!-- Include the AdActivity and InAppPurchaseActivity configChanges and themes. -->
        <activity
            android:name="com.google.android.gms.ads.AdActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
            android:theme="@android:style/Theme.Translucent" />
        <activity
            android:name="com.google.android.gms.ads.purchase.InAppPurchaseActivity"
            android:theme="@style/Theme.IAPTheme" />
        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
    </application>

</manifest>